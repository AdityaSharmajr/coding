Given an array that contains both negative and positive integers, find the maximum product subarray.
Example 1:
Input: Nums = [1,2,3,4,5,0]
Output: 120
Explanation: In the given array, we can see 1×2×3×4×5 gives maximum product value.
Example 2: Input: Nums = [1,2,-3,0,-4,-5]
Output: 20
Explanation: In the given array, we can see (-4)×(-5) gives maximum product value.
#include<bits/stdc++.h>
using namespace std;
void MaxProSubArray(int arr[], int n){
    int prefix = 1, suffix = 1;
    int answer = INT_MIN;
    for(int i = 0; i < n; i++){
        if(prefix == 0) prefix = 1;
        if(suffix == 0) suffix = 1;
        prefix *= arr[i];
        suffix *= arr[n-i-1];
        answer = max(answer, max(prefix, suffix));
    }
    cout << answer;
}

int main(){
    int arr[] = {1,2,-3,0,-4,-5};
    int n = sizeof(arr)/sizeof(arr[0]);
    MaxProSubArray(arr, n);
    return 0;
}
