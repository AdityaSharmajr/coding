Write a program to find whether an array is a subset of another array or not.
Given arr1[] and arr2[], we need to find whether arr1[] is a subset of arr2[]. An array is called a subset of another if all of its elements are present in the other array.
Note: Array elements are assumed to be unique.
Example 1:
Input: arr1[]= [1,3,4,5,2]
       arr2[]= [2,4,3,1,7,5,15]
Output: arr1[] is a subset of arr2[]
Example 2:
Input: arr1[]= [1,3,4,5,2]
       arr2[]= [4,5,2]
Output: arr1[] is not a subset of arr2[]
Example 3:
Input: arr1[]= [1,3,4,5,2]
       arr2[]= [11,12,13,15,16]
Output: arr1[] is not a subset of arr2[]
#include<bits/stdc++.h>
using namespace std;

bool SubsetArray(int arr1[],int m, int arr2[],int n){
    for(int i = 0; i < m; i++){
        bool present = false;
        for(int j = 0; j < n; j++){
            if(arr1[i] == arr2[j]){
                present = true;
                break;
            }
        }
        if(present == false) return false;
    }
    return true;
}
int main(){
    cout << "Enter first array size : ";
    int m;
    cin >> m;
    int arr1[m];
    for(int i = 0; i < m; i++){
        cin >> arr1[i];
    }
    cout << "Enter Second array size : ";
    int n;
    cin >> n;
    int arr2[n];
    for(int i = 0; i < n; i++){
        cin >> arr2[i];
    }
    if(m>n){
        cout << "Not a valid subset";
    }
    bool ans = SubsetArray(arr1, m, arr2, n);
    if(ans == true) cout << "arr1 is subset of arr2";
    else cout << "arr1 is not a subset of arr2";
    return 0;
}
