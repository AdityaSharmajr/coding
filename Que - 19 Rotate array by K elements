Problem Statement: Given an array of integers, rotating array of elements by k elements either left or right.
Example 1:
Input: N = 7, array[] = {1,2,3,4,5,6,7} , k=2 , right
Output: 6 7 1 2 3 4 5
Explanation: array is rotated to right by 2 position .
Example 2:
Input: N = 6, array[] = {3,7,8,9,10,11} , k=3 , left 
Output: 9 10 11 3 7 8
Explanation: Array is rotated to right by 3 position.
#include<bits/stdc++.h>
using namespace std;

void rotateArrayright(int n, int arr[], int k){
    vector<int>num;
    for(int i = n - k; i < n; i++){
        num.push_back(arr[i]);
    }
    for(int i = 0; i < n - k; i++){
        num.push_back(arr[i]);
    }
    for(int i = 0; i < n; i++){
        cout << num[i] << " ";
    }
}
void rotateArrayleft(int n, int arr[], int k){
    vector<int> num;
    for(int i = k; i < n; i++){
        num.push_back(arr[i]);
    }
    for(int i = 0; i < n - k; i++){
        num.push_back(arr[i]);
    }
    for(int i = 0; i < n; i++){
        cout << num[i] << " ";
    }
}
int main(){
    int m;
    cin >> m;
    for(int i = 0; i < m; i++){
    int n;
    cin >> n;
    int arr[n];
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    int k;
    cin >> k;
    string dir;
    cin >> dir;
    if(dir == "right"){
        rotateArrayright(n, arr, k);
    }else if(dir == "left"){
        rotateArrayleft(n, arr, k);
    }
    }
    return 0;
}
